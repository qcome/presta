version: "3.5"

services:
  db:
    build: ./database
    restart: unless-stopped # restart le container si stoppé lors d'une erreur
    env_file:
      - .env
    volumes:
      #- ./db_data/db/backup.sql:/docker-entrypoint-initdb.d/backup.sql #it loads an already existing database
      - ../sites/${APP_NAME}/data/mysql/:/var/lib/mysql # mapping de la db
      - ../sites/${APP_NAME}/logs/mysql/:/var/log/mysql # mapping des logs de la db
    entrypoint: "" # On écrase l'entrypoint de l'image mysql : ENTRYPOINT ["docker-entrypoint.sh"]
    command: >
      bash -c "chown -R mysql:mysql /var/log/mysql 
      && exec /usr/local/bin/docker-entrypoint.sh mysqld 
      --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci 
      --log_error=/var/log/mysql/mysql_error.log 
      --general_log_file=/var/log/mysql/mysql.log --general_log=1 
      --slow_query_log_file=/var/log/mysql/mysql-slow.log --long_query_time=2 --slow_query_log=1"
      --log-queries-not-using-indexes
    networks: 
      - backend

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8080:80
    env_file:
      - .env
    environment:
      PMA_HOST: db
    networks: 
      - backend
  
  nginx:
    build: ./nginx
    ports:
      - "8000:80"
      - "443"
    depends_on:
      - php-fpm
    volumes:
      - ../sites/${APP_NAME}/app/:/var/www/html/
      - ../sites/${APP_NAME}/logs/nginx/:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d #OK
    restart: always
    env_file:
      - .env
    networks: 
      - frontend

  php-fpm:
    build: 
      context: ./php-fpm
      dockerfile: Dockerfile
      args:
        APP_NAME: ${APP_NAME}
        RUN_INSTALL: ${RUN_INSTALL}
    image: presta/${APP_NAME}_app:latest
    #command: ["/tmp/wait-for-it.sh", "--timeout=60", "--strict", "mysql:3306", "--", "/tmp/run_install_prestashop.sh", "${RUN_INSTALL}", "${APP_NAME}"]
    volumes:
      - ../sites/${APP_NAME}/app/:/var/www/html
      #- ~/.ssh/id_rsa:/root/.ssh/id_rsa
    expose:
      - 9000
    depends_on:
      - db
    env_file:
      - .env
    networks: 
      - frontend
      - backend

  networks: 
    frontend:
    backend:

